CREATE TABLE IF NOT EXISTS courses (id INT AUTO_INCREMENT PRIMARY KEY, title VARCHAR(50) NOT NULL, deleted_at TIMESTAMP DEFAULT NULL);
CREATE TABLE IF NOT EXISTS teachers (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL, surname VARCHAR(50) NOT NULL, deleted_at TIMESTAMP DEFAULT NULL);
CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, account VARCHAR(50) NOT NULL UNIQUE, password_salt VARCHAR(32) NOT NULL, password_pepper VARCHAR(32) NOT NULL, password_hash VARCHAR(128) NOT NULL, password_loop INT NOT NULL, role VARCHAR(10) NOT NULL);
CREATE TABLE IF NOT EXISTS lessons (id INT AUTO_INCREMENT PRIMARY KEY, course_id INT NOT NULL, user_id INT NOT NULL, teacher_id INT NOT NULL, day INT NOT NULL, hour INT NOT NULL, completed BOOLEAN DEFAULT FALSE, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, deleted_at TIMESTAMP DEFAULT NULL, FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (teacher_id) REFERENCES teachers(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS repetitions (id INT AUTO_INCREMENT PRIMARY KEY, teacher_id INT NOT NULL, course_id INT NOT NULL, deleted_at TIMESTAMP DEFAULT NULL, FOREIGN KEY (teacher_id) REFERENCES teachers(id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE, UNIQUE KEY teacher_course (teacher_id, course_id));
CREATE TABLE IF NOT EXISTS user_tokens (token VARCHAR(256) PRIMARY KEY, user_id INT, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
